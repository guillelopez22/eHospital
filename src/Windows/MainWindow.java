/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Windows;

import Classes.Ambulancia;
import Classes.Complejo;
import Classes.Complejo_Hospitalario;
import Classes.Conexion;
import Classes.Paramedico;
import Classes.Ubicacion;
import static Windows.Ambulance.cb_amb_complex;
import static Windows.Ambulance.cb_current;
import static Windows.Connect.cb_ubicacion1;
import static Windows.Emergencias.cb_comp;
import static Windows.H_Complex.cb_hospital;
import static Windows.Paramedicos.cb_complejo;
import static Windows.Paramedicos.cb_delparamedic;
import edu.uci.ics.jung.algorithms.layout.CircleLayout;
import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.graph.UndirectedSparseMultigraph;
import edu.uci.ics.jung.graph.util.EdgeType;
import edu.uci.ics.jung.visualization.BasicVisualizationServer;
import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;
import java.awt.Dimension;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.PriorityQueue;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Memo
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Paramedicos");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 93, 152, 37));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Ambulancias");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 136, 152, 33));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Hospitales");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 52, 152, 35));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Complejo");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 152, -1));

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Crear Conexiones");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 60, -1, -1));

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Ver Mapa");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 119, -1));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Escribir al Archivo");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, -1, -1));

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Load from file..");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 310, -1, -1));

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setText("EMERGENCIAS");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        jButton10.setText("Despachar Paramedicos");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 310, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Classes/TimThumb.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 490, 340));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (complejos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen hospitales, no se pueden crear paramedicos");
        } else {
            Paramedicos para = new Paramedicos();
            para.pack();
            para.setVisible(true);
            para.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (int i = 0; i < complejos.size(); i++) {
                model.addElement(complejos.get(i));
            }
            cb_complejo.setModel(model);
            

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (complejos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen hospitales, no se pueden crear ambulancias");
        } else {
            Ambulance amb = new Ambulance();
            amb.pack();
            amb.setVisible(true);
            amb.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (int i = 0; i < complejos.size(); i++) {
                model.addElement(complejos.get(i));
            }
            cb_amb_complex.setModel(model);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        H_Complex hospital = new H_Complex();
        hospital.pack();
        hospital.setVisible(true);
        hospital.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < complejos.size(); i++) {
            if (complejos.get(i) instanceof Complejo_Hospitalario) {
                model.addElement(complejos.get(i));

            }
        }
        cb_hospital.setModel(model);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Complex complex = new Complex();
        complex.pack();
        complex.setVisible(true);
        complex.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (complejos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay complejos para conectar");
        } else if (complejos.size() == 1) {
            JOptionPane.showMessageDialog(this, "Ya casi... Falta un complejo mas");
        } else {
            Connect connecto = new Connect();
            connecto.pack();
            connecto.setVisible(true);
            connecto.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            DefaultComboBoxModel model = new DefaultComboBoxModel();
            for (int i = 0; i < complejos.size(); i++) {
                model.addElement(complejos.get(i));
            }
            cb_ubicacion1.setModel(model);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < ambulancias.size(); i++) {
            writeToBinary(filename, ambulancias.get(i), true);
        }
        for (int i = 0; i < complejos.size(); i++) {
            writeToBinary(filename, complejos.get(i), true);
        }
        for (int i = 0; i < paramedicos.size(); i++) {
            writeToBinary(filename, ambulancias.get(i), true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        readFromBinaryFile(filename);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < conexiones.size(); i++) {
            grafo.addEdge(conexiones.get(i), conexiones.get(i).getUbicacion1(), conexiones.get(i).getUbicacion2(), EdgeType.UNDIRECTED);
        }

        Layout<Integer, String> layout = new CircleLayout(grafo);
        layout.setSize(new Dimension(550, 550));
        BasicVisualizationServer<Integer, String> visualization = new BasicVisualizationServer<Integer, String>(layout);
        visualization.setPreferredSize(new Dimension(600, 600));
        visualization.getRenderContext().setLabelOffset(20);
        visualization.getRenderContext().setVertexLabelTransformer(new ToStringLabeller());
        visualization.getRenderContext().setEdgeLabelTransformer(new ToStringLabeller());
        JFrame frame = new JFrame("Ciudad");
        frame.getContentPane().add(visualization);

        frame.pack();
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Emergencias emergency = new Emergencias();
        emergency.pack();
        emergency.setVisible(true);
        emergency.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        for (int i = 0; i < complejos.size(); i++) {
            if (complejos.get(i) instanceof Complejo) {
                model.addElement(complejos.get(i));
            }
        }
        cb_comp.setModel(model);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < paramedicos.size(); i++) {
            queue_paramedics.add(paramedicos.get(i));
        }
        for (int i = 0; i < complejos.size(); i++) {
            for (int j = 0; j < ((Complejo_Hospitalario) complejos.get(i)).getCapacidad_paramedicos(); j++) {
                if (((Paramedico)queue_paramedics.peek()).getComplejo().equals(complejos.get(i))) {
                    ((Complejo_Hospitalario) complejos.get(i)).setParamedicos((Paramedico) queue_paramedics.poll());
                }
                
            }
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    public static PriorityQueue queue_paramedics = new PriorityQueue();
    public static UndirectedSparseMultigraph grafo = new UndirectedSparseMultigraph<Ubicacion, Conexion>();
    public static ArrayList<Ubicacion> complejos = new ArrayList();
    public static ArrayList<Ambulancia> ambulancias = new ArrayList();
    public static ArrayList<Paramedico> paramedicos = new ArrayList();
    public static ArrayList<Conexion> conexiones = new ArrayList();
    private static String filename = "Memo.memo";

    public static void writeToBinary(String filename, Object obj, boolean append) {
        File file = new File(filename);
        ObjectOutputStream out = null;

        try {
            if (!file.exists() || !append) {
                out = new ObjectOutputStream(new FileOutputStream(filename));
            } else {
                out = new AppendableObjectOutputStream(new FileOutputStream(filename, append));
            }
            out.writeObject(obj);
            out.flush();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                if (out != null) {
                    out.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public static void readFromBinaryFile(String filename) {
        File file = new File(filename);

        if (file.exists()) {
            ObjectInputStream ois = null;
            try {
                ois = new ObjectInputStream(new FileInputStream(filename));
                while (true) {
                    if (ois.readObject() instanceof Complejo_Hospitalario) {
                        System.out.println(ois.readObject().toString());
                        complejos.add((Ubicacion) ois.readObject());
                    }
                }
            } catch (EOFException e) {

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (ois != null) {
                        ois.close();
                    }
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    private static class AppendableObjectOutputStream extends ObjectOutputStream {

        public AppendableObjectOutputStream(OutputStream out) throws IOException {
            super(out);
        }

        @Override
        protected void writeStreamHeader() throws IOException {
        }
    }

}
